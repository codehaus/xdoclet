THESE TODOS ARE MINOR. FOR THE MORE IMPORTANT TODOS SEE XDoclet2 (XDTWO) IN JIRA.

o Perhaps move the classpath from XDoclet to XDoclet container?
o Maybe let PluginFactory use class names instead of classes, so we don't need to have dtdparser and stuff on classpath. -Or just echo an info message.
o Add addJar/addFile methods to dynamically build classpath (even from gui).
o build.xml generation should take a file, not a dir, and should never overwrite.
  -strip away buildXmlDir property
o Refactor PropertyText|File
o Make it possible to specify templates as files (instead of relative paths) and update classpath accordingly.
o Write a real proposal for the new mission. Think about how to organise the plugin sub-projects and make it easy to get started with CVS etc.
o Document the build process from A to Z
o Make more interfaces so we can use mocks in JUnit tests
o Use regexp matching in tag validation
o Define a TagMetaData API (for use with IDE plugins)
o Make a console à la Maven console
o Make executable jar file that pops up gui.

o Generalise the post process step in SubTask (pretty printing, validation, ant processing)?
o Integrate PMD
o Integrate CPD (PMD's Copy paste detector)
o Integrate Clover in the build process
o Provide integration or best practice on post-validation with JBoss verifier and ejbc and such
o Write a @tag migration tool that can be configured/extended to convert @tags for particular plugins.
o Write plugin for the old template engine and support it as much as possible.
o Contributors often dupliate tags and logic (@jonas.bean). Better documentation! Searchable? Lucene?
o Generate (or hardcode) a .properties file for easy <taskdef> in Ant without classname
  in the build file.
o Add dynamically defined "tools" to the context for ScriptPlugin.  Possible syntax:
      <xdoclet>
        <velocity>
          <tool name="foo" classname="com.bar.FooUtils"/>
        </velocity>
      </xdoclet>
   The idea is to keep a one-off or custom generator writer from having to extend
   XDoclet API's.  There may still be some XDoclet API dependency in the tool itself
   if needed though.
o Research xdoclet dependency checking - it seems to be doing more than it needs to.
o BeanInfo seems to be written back to CVS source tree. Fix it.
o Remove BeanInfo classes for tag migrator in CVS.

